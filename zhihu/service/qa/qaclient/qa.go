// Code generated by goctl. DO NOT EDIT.
// Source: qa.proto

package qaclient

import (
	"context"

	"qa/qa"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = qa.Request
	Response = qa.Response

	Qa interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultQa struct {
		cli zrpc.Client
	}
)

func NewQa(cli zrpc.Client) Qa {
	return &defaultQa{
		cli: cli,
	}
}

func (m *defaultQa) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := qa.NewQaClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
